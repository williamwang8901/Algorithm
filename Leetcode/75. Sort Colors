class Solution {
    public void sortColors(int[] nums) {
        if (nums == null || nums.length == 0) {
            return;
        }
        
        int left = 0;
        int right = nums.length - 1;
        int j = 0;
        while (left <= right) {
            if (nums[left] == 0) {
                swap(nums, left++, j++);
            } else if (nums[left] == 2){
                swap(nums, left, right--);
            } else {
                left++;
            }
        }
    }
    
    
    public void twoPass(int[] nums) {
        if (nums == null || nums.length == 0) {
            return;
        }
        
        int j = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                swap(nums, i, j++);
            }
        }
        
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 1) {
                swap(nums, i, j++);
            }
        }
        while (j < nums.length) {
            nums[j++] = 2;
        }
    }
    
    public void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    
    
    public void bruteForce(int[] nums) {
        if (nums == null || nums.length == 0) {
            return;
        }
        int[] arr = new int[3];
        for (int i = 0; i < nums.length; i++) {
            arr[nums[i]]++;
        }
        int k = 0;
        for (int i = 0; i < 3; i++) {
            while (arr[i]-- > 0) {
                nums[k++] = i;
            }
        }
    }
}