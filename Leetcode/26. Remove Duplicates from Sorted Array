class Solution {
    public int removeDuplicates(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        
        int left = 0;
        
        for (int i = 0; i < nums.length; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            
            nums[left++] = nums[i];
            
            
            
        }
        return left;
    }
}


class Solution {
    public int removeDuplicates(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        
        int j = 0;
        
        for (int i = 0; i < nums.length; i++) {
            if (i == 0) {
                j++;
                continue;
            }
            if (nums[i] != nums[i - 1]) {
                nums[j++] = nums[i];
            }
        }
        return j;
    }

        //I don't like old-style indexed looping. I much prefer the "enhanced" (Java) / "range-based" (C++) loops, they make things much cleaner.

    public int method2(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        
        int i = 0;
        for (int num : nums) {
            if (i == 0 || num != nums[i - 1]) {
                nums[i++] = num;
            }
        }
        return i;
    }
}