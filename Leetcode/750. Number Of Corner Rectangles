class Solution {
    
    //http://www.cnblogs.com/grandyang/p/8433813.html
    public int countCornerRectangles(int[][] grid) {
        // return bruteForce(grid);
        
        return method2(grid);
    }
    
    
    public int bruteForce(int[][] grid) {
        if (grid == null || grid.length == 0) {
            return 0;
        }
        
        int m = grid.length;
        int n = grid[0].length;
        int res = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 0) {
                    continue;
                }
                
                for (int h = 1; h < m - i; h++) {
                    if (grid[i + h][j] == 0) {
                        continue;
                    }
                    for (int w = 1; w < n - j; w++) {
                        if (grid[i][j + w] == 1 && grid[i + h][j + w] == 1) {
                            res++;
                        }
                    }
                }
            }
        }
        return res;
    }
    
    
    public int method2(int[][] grid) {
        if (grid == null || grid.length == 0) {
            return 0;
        }
        
        int result = 0;
        
        
        for (int i = 0; i < grid.length; i++) {
            for (int j = i + 1; j < grid.length; j++) {
                
                int count = 0;
                for (int k = 0; k < grid[0].length; k++) {
                    if (grid[i][k] == 1 && grid[j][k] == 1) {
                        count++;
                    }
                }
                result += count * (count - 1) / 2;  //这里是combination  Cn 2
            }
        }
         return result;
    }
}