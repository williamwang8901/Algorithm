class Solution {
    public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (n <= 1) {
            return result;
        }
        List<Integer> ret = new ArrayList<Integer>();
        // if (n == 1) {
        //     ret.add(1);
        //     result.add(ret);
        //     return result;
        // }
        
        dfs(result, n, ret);
        return result;
    }
    
    public void dfs(List<List<Integer>> result, int n, List<Integer> ret) {
        if (n == 1) {
            if (ret.size() > 1) { //  这一步很好的 把第一次n 自己给filter out 了
            result.add(new ArrayList<Integer>(ret));
            }
            return;
        }
        
        for (int i = 2; i <= n; i++) {
            if (n % i == 0) {
                ret.add(i);
                dfs(result, n / i, ret);
                ret.remove(ret.size() - 1);
            }
        }
    }
}