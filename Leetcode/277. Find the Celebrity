/* The knows API is defined in the parent class Relation.
      boolean knows(int a, int b); */

public class Solution extends Relation {
    //The first pass is to pick out the candidate. If candidate knows i, then switch candidate. The second pass is to check whether the candidate is real.
    public int findCelebrity1(int n) {
        if (n <= 0) {
            return -1;
        }
        
        boolean[] candidate = new boolean[n];
        Arrays.fill(candidate, true);
        for (int i = 0; i < n; i++) {  // for each person we check if he is celebrity
            for (int j = 0; j < n; j++) {
                if (i != j && candidate[i]) {
                    if (knows(i, j) || !knows(j, i)) {
                        candidate[i] = false;
                        break;
                    }
                    if (knows(j, i)) {
                        candidate[j] =false;
                    }
                }
            }
            if (candidate[i]) {
                return i;
            }
        }
    return -1;
    }
    
    //method2
    //The first pass is to pick out the candidate. If candidate knows i, then switch candidate. The second pass is to check whether the candidate is real.
    public int findCelebrity(int n) {
        int candidate = 0;
        
        for (int i = 1; i < n; i++) {
            if (knows(candidate, i)) {
                candidate = i;
            }
        }
        
        for (int i = 0; i < n; i++) {
            if (i != candidate) {
                if (!knows(i, candidate) || knows(candidate, i)) {
                    return -1;
                }
            }
        }
        return candidate;
    }
    
}