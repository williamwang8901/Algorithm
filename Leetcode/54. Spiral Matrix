class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new ArrayList<Integer>();
        if (matrix == null || matrix.length == 0) {
            return result;
        }
        
         int up = 0;
        int down = matrix.length - 1;
        int left = 0; 
        int right = matrix[0].length - 1;
        while (up <= down && left <= right) {
            for (int i = left; i <= right; i++) {
                result.add(matrix[up][i]);
            }
            for (int j = up + 1; j <= down; j++) {
                result.add(matrix[j][right]);
            }
            if (left < right && up < down) {
                for (int i = right - 1; i >= left; i--) {
                    result.add(matrix[down][i]);
                }
                for (int j = down - 1; j > up; j--) {
                    result.add(matrix[j][left]);
                }
            }
        
        up++;
        down--;
        left++;
        right--;   
        }
        return result;
         
    }