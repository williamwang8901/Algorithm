class Solution {
/*We want to cut from the edge of the most common location among all the levels, hence using a map to record the locations and their corresponding occurrence. Most importantly, Mexico will pay for it! (I wish)


*/
    //The key idea is that the position which has most gaps is the position cross least bricks.
    public int leastBricks(List<List<Integer>> wall) {
        if (wall == null || wall.size() == 0) {
            return 0;
        }
        int max = 0;
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        for (List<Integer> list : wall) {
            int length = 0;
            for (int i = 0; i < list.size() - 1; i++) {//不能加最后一个 因为末尾是不算的
                length += list.get(i);
                if (!map.containsKey(length)) {
                    map.put(length, 0);
                }
                map.put(length, map.get(length) + 1);
                max = Math.max(max, map.get(length));
            }
        }
        return wall.size() - max;
    }
    
    
}