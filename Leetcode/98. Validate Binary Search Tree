/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
   TreeNode pre = null;
    public boolean isValidBST(TreeNode root) {
         
       
        boolean flag = inOrder(root);
        
             return flag;
        // return dfs4(root);
    
        
    }
    
    public boolean inOrder(TreeNode root) {
        if (root == null) {
            return true;
        }
        if (!inOrder(root.left)) {
            return false;
        }
        
        if (pre != null && pre.val >= root.val) {
            return false;
        }
        pre = root;
        
        // Judge the right tree.
        if (!inOrder(root.right)) {
            return false;
        }
        
        return true;
    }
    
    
//      public boolean dfs4(TreeNode root) {
//         if (root == null) {
//             return true;
//         }
        
//         // Judge the left tree.
//         if (!dfs4(root.left)) {
//             return false;
//         }
        
//         // judge the sequence.
//         if (pre != null && root.val <= pre.val) {
//             return false;
//         }
//         pre = root;
        
//         // Judge the right tree.
//         if (!dfs4(root.right)) {
//             return false;
//         }
        
//         return true;
//     }
}